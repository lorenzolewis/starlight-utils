---
import type { StarlightRouteData } from "@astrojs/starlight/route-data";
import { AstroError } from "astro/errors";
import config from "virtual:starlight-utils/config";

interface Props extends StarlightRouteData {
  position: "leading";
}

const { position } = Astro.props;

const sidebarLabel = config?.navLinks?.[position]?.useSidebarLabelled;

if (!sidebarLabel) {
  throw new AstroError(
    `No sidebar label was specified for the ${JSON.stringify(config?.navLinks?.[position])} entry in the Astro config.`
  );
}

const entry = Astro.locals.starlightRoute.sidebar.find(
  (entry) => entry.label === sidebarLabel
);

if (!entry) {
  console.log("Test", Astro.props.sidebar);
  throw new AstroError(
    `Could not find the sidebar labelled \`${sidebarLabel}\` that was referenced in the \`${position}\` Astro config.`
  );
}

if (entry.type !== "group") {
  throw new AstroError(
    `\`${entry.label}\` cannot be used with multi-sidebar.

  The sidebar entry specified in the Astro config must be either a group or autogenerated.

  See https://starlight.astro.build/guides/sidebar/#groups and https://starlight.astro.build/guides/sidebar/#autogenerated-groups for more details.`
  );
}

if (entry.entries.some((entry) => entry.type !== "link")) {
  throw new AstroError(
    `Only links can be specified for nav links. No groups or autogenerated types are allowed.`
  );
}

// Styles adapted from https://github.com/withastro/starlight/blob/main/packages/starlight/components/SidebarSublist.astro
// and https://www.figma.com/design/GrDkcguAR7tSWPFuLVDixq/Theme---Starlight-Docs?node-id=454-34753&t=fgVYGvAg6ftBSpJY-0
---

<ul>
  {
    entry.entries.map((entry) => (
      <li>
        {/* @ts-ignore These can't be reduced down to 'link' types even though we're checking above */}
        <a
          href={entry.href}
          {...entry.attrs}
          aria-current={entry.isCurrent && "page"}
        >
          {entry.label}
        </a>
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: flex;
    list-style: none;
    padding: 0;
    gap: var(--sl-nav-gap);
  }
  a {
    text-decoration: none;
    color: var(--sl-color-gray-1);
  }

  a:hover,
  a:focus {
    color: var(--sl-color-white);
  }

  [aria-current="page"],
  [aria-current="page"]:hover,
  [aria-current="page"]:focus {
    font-weight: 600;
  }

  @media (min-width: 50rem) {
    a {
      font-size: var(--sl-text-sm);
    }
  }
</style>
